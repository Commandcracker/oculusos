local a=os.pullEvent;os.pullEvent=os.pullEventRaw;os.startTimer(1)local b=3;local c,d=term.getSize()local e=false;local function f(g,h)local i=math.floor((c-string.len(h))/2)+1;term.setCursorPos(i,g)term.write(h)end;local function j(j,k)selected=0;if not fs.exists("/"..j)then term.setBackgroundColor(colors.black)term.clear()term.setCursorPos(1,1)if term.isColor()then term.setTextColor(colors.red)end;term.write(k.." not found starting: OculusOS")sleep(2)else if not fs.exists("/"..j.."/boot")then term.setBackgroundColor(colors.black)term.clear()term.setCursorPos(1,1)if term.isColor()then term.setTextColor(colors.red)end;term.write("Boot on "..k.." not found starting: OculusOS")sleep(2)else term.setBackgroundColor(colors.black)term.clear()term.setCursorPos(1,1)shell.run("/"..j.."/boot")term.clear()term.setCursorPos(1,1)if term.isColor()then term.setTextColor(colors.yellow)end;sleep(2)term.write("Boot on "..k.." done ore crashed starting: OculusOS")sleep(2)end end end;local function l()local m=".:/bin:/rom/programs"if term.isColor()then m=m..":/rom/programs/advanced"end;if turtle then m=m..":/rom/programs/turtle"else m=m..":/rom/programs/rednet:/rom/programs/fun"if term.isColor()then m=m..":/rom/programs/fun/advanced"end end;if pocket then m=m..":/rom/programs/pocket"end;if commands then m=m..":/rom/programs/command"end;if http then m=m..":/rom/programs/http"end;shell.setPath(m)shell.setAlias("cls","clear")local n={}function n.build(...)local o=table.pack(...)for p=1,1 do local q=o[p]if q~=nil then if type(q)=="function"then q={q}o[p]=q end;if type(q[1])~="function"then error(("Bad table entry #1 at argument #%d (expected function, got %s)"):format(p,type(q[1])),2)end;if q.many and p<o.n then error(("Unexpected 'many' field on argument #%d (should only occur on the last argument)"):format(p),2)end end end;return function(shell,r,s,t)local q=o[r]if not q then if r<=o.n then return end;q=o[o.n]if not q or not q.many then return end end;return q[1](shell,s,t,table.unpack(q,2))end end;function n.dir(shell,s)return fs.complete(s,shell.dir(),false,true)end;function n.file(shell,s)return fs.complete(s,shell.dir(),true,false)end;function n.dirOrFile(shell,s,t,u)local v=fs.complete(s,shell.dir(),true,true)if u then for w=1,#v do local x=v[w]if x:sub(-1)~="/"then v[w]=x.." "end end end;return v end;function n.programWithArgs(shell,s,t,y)if#t+1==y then local z=shell.getCompletionInfo()if s:sub(-1)~="/"and z[shell.resolveProgram(s)]then return{" "}else local v=shell.completeProgram(s)for w=1,#v do local A=v[w]if A:sub(-1)~="/"and z[shell.resolveProgram(s..A)]then v[w]=A.." "end end;return v end else local B=t[y]local C=shell.resolveProgram(B)if not C then return end;local D=shell.getCompletionInfo()[C]if not D then return end;return D.fnComplete(shell,#t-y+1,s,{B,table.unpack(t,y+1,#t)})end end;function n.completeProgram(shell,E,F,G)if E==1 then return shell.completeProgram(F)end end;shell.setCompletionFunction("bin/cat",n.build(n.file))shell.setCompletionFunction("bin/display",n.build(n.file))shell.setCompletionFunction("bin/less",n.build(n.file))shell.setCompletionFunction("bin/touch",n.build(n.file))shell.setCompletionFunction("bin/tree",n.build(n.dir))shell.setCompletionFunction("bin/decrypt",n.build(n.dirOrFile))shell.setCompletionFunction("bin/encrypt",n.build(n.dirOrFile))shell.setCompletionFunction("bin/shell",n.build({n.programWithArgs,2,many=true}))shell.setCompletionFunction("bin/list",n.build(n.dir))shell.setCompletionFunction("bin/which",n.completeProgram)local H="/lib/"local I=fs.list(H)print("Booting OculusOS...")print("Initalizing lib...")for J in pairs(I)do os.loadAPI(H..I[J])print("> "..H..I[J])end;local K="/etc/pack/packages/pack/"local L=K.."pack-src/lib/pack"local M=K.."pack/lib/pack"if fs.exists(L)then dofile(L).loadPackages(shell)elseif fs.exists(M)then dofile(M).loadPackages(shell)end;sleep(1)end;local function N(O)f(O,'Use the keys "UP" and')f(O+1,'"DOWN" to mark an entry,')f(O+2,'"ENTER" to boot of the')f(O+3,"marked operating system.")end;local function P(O)f(O,'Use the keys "UP" and "DOWN" to mark an entry,')f(O+1,'"ENTER" to boot of the marked operating system.')end;local function Q()local selected=1;local R=false;while true do if term.isColor()then term.setBackgroundColor(colors.blue)else term.setBackgroundColor(colors.gray)end;term.clear()f(2,"Oculus bootloader")local S={"OculusOS",os.version(),"Startup"}if not turtle and not pocket then local T={"Disk1","Disk2","Disk3","Disk4","Disk5"}for j in ipairs(T)do table.insert(S,T[j])end end;if turtle and R==false then else for p in ipairs(S)do term.setCursorPos(4,5+p)term.write(" "..S[p])if not turtle and not pocket and R==false and p==5 then break end end end;if not turtle or R==true then term.setCursorPos(4,selected+5)term.write("*")end;if pocket then N(12)if not R then f(18,"automatically")f(19,"executing in "..b.."s.")end else if turtle then if R then f(12,'Use "UP" and "DOWN" to mark an entry,')f(13,'Press "ENTER" to boot from the entry')else N(5)f(11,"The highlighted entry is")f(12,"automatically executed in "..b.."s.")end else if R then P(17)else P(14)f(17,"The highlighted entry is automatically")f(18,"executed in "..b.."s.")end end end;if not turtle and not pocket and not R then paintutils.drawBox(2,4,c-1,12,colors.white)else if turtle and not R then else paintutils.drawBox(2,4,c-1,7+#S,colors.white)end end;local U,V=os.pullEvent()if U=="timer"and R==false then b=b-1;os.startTimer(1)if b<0 then return selected end elseif U=="key"then if V==200 then R=true;selected=selected-1;if selected==0 then selected=#S end elseif V==208 then R=true;selected=selected+1;if#S<selected then selected=1 end elseif V==28 then return selected end end end end;term.clear()selected=Q()os.pullEvent=a;if selected==2 then term.setBackgroundColor(colors.black)term.clear()term.setCursorPos(1,1)if term.isColor()then term.setTextColor(colors.yellow)end;term.write(os.version())term.setCursorPos(1,2)e=true elseif selected==3 then if not fs.exists("boot")then term.setBackgroundColor(colors.black)term.clear()term.setCursorPos(1,1)if term.isColor()then term.setTextColor(colors.red)end;term.write("Boot not found starting: "..os.version())sleep(2)else term.setBackgroundColor(colors.black)term.clear()term.setCursorPos(1,1)shell.run("boot")sleep(2)term.clear()term.setCursorPos(1,1)if term.isColor()then term.setTextColor(colors.yellow)end;sleep(2)term.write("Boot done ore crashed: "..os.version())sleep(2)end elseif selected==4 then j("disk","Disk1")elseif selected==5 then j("disk2","Disk2")elseif selected==6 then j("disk3","Disk3")elseif selected==7 then j("disk4","Disk4")elseif selected==8 then j("disk5","Disk5")end;if not e then term.setBackgroundColor(colors.black)term.clear()term.setCursorPos(1,1)term.setTextColour(colors.white)l()term.clear()term.setCursorPos(1,1)shell.run("/bin/shell")if term.isColour()then term.setTextColour(colours.orange)end;print("Goodbye")term.setTextColour(colours.white)sleep(1)os.shutdown()end