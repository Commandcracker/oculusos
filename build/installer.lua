local a={}local b={["\n"]="\\n",["\r"]="\\r",["\t"]="\\t",["\b"]="\\b",["\f"]="\\f",["\""]="\\\"",["\\"]="\\\\"}local function c(t)local d=0;for e,f in pairs(t)do if type(e)~="number"then return false elseif e>d then d=e end end;return d==#t end;local g={['\n']=true,['\r']=true,['\t']=true,[' ']=true,[',']=true,[':']=true}function a.removeWhite(h)while g[h:sub(1,1)]do h=h:sub(2)end;return h end;local function i(j,k,l,m)local h=""local function n(o)h=h..("\t"):rep(l)..o end;local function p(j,q,r,s,u)h=h..q;if k then h=h.."\n"l=l+1 end;for e,f in s(j)do n("")u(e,f)h=h..","if k then h=h.."\n"end end;if k then l=l-1 end;if h:sub(-2)==",\n"then h=h:sub(1,-3).."\n"elseif h:sub(-1)==","then h=h:sub(1,-2)end;n(r)end;if type(j)=="table"then assert(not m[j],"Cannot encode a table holding itself recursively")m[j]=true;if c(j)then p(j,"[","]",ipairs,function(e,f)h=h..i(f,k,l,m)end)else p(j,"{","}",pairs,function(e,f)assert(type(e)=="string","JSON object keys must be strings",2)h=h..i(e,k,l,m)h=h..(k and": "or":")..i(f,k,l,m)end)end elseif type(j)=="string"then h='"'..j:gsub("[%c\"\\]",b)..'"'elseif type(j)=="number"or type(j)=="boolean"then h=tostring(j)else error("JSON only supports arrays, objects, numbers, booleans, and strings",2)end;return h end;function a.encode(j)return i(j,false,0,{})end;function a.encodePretty(j)return i(j,true,0,{})end;local v={}for e,f in pairs(b)do v[f]=e end;function a.parseBoolean(h)if h:sub(1,4)=="true"then return true,a.removeWhite(h:sub(5))else return false,a.removeWhite(h:sub(6))end end;function a.parseNull(h)return nil,a.removeWhite(h:sub(5))end;local w={['e']=true,['E']=true,['+']=true,['-']=true,['.']=true}function a.parseNumber(h)local x=1;while w[h:sub(x,x)]or tonumber(h:sub(x,x))do x=x+1 end;local j=tonumber(h:sub(1,x-1))h=a.removeWhite(h:sub(x))return j,h end;function a.parseString(h)h=h:sub(2)local o=""while h:sub(1,1)~="\""do local y=h:sub(1,1)h=h:sub(2)assert(y~="\n","Unclosed string")if y=="\\"then local z=h:sub(1,1)h=h:sub(2)y=assert(v[y..z],"Invalid escape character")end;o=o..y end;return o,a.removeWhite(h:sub(2))end;function a.parseArray(h)h=a.removeWhite(h:sub(2))local j={}local x=1;while h:sub(1,1)~="]"do local f=nil;f,h=a.parseValue(h)j[x]=f;x=x+1;h=a.removeWhite(h)end;h=a.removeWhite(h:sub(2))return j,h end;function a.parseObject(h)h=a.removeWhite(h:sub(2))local j={}while h:sub(1,1)~="}"do local e,f=nil,nil;e,f,h=a.parseMember(h)j[e]=f;h=a.removeWhite(h)end;h=a.removeWhite(h:sub(2))return j,h end;function a.parseMember(h)local e=nil;e,h=a.parseValue(h)local j=nil;j,h=a.parseValue(h)return e,j,h end;function a.parseValue(h)local A=h:sub(1,1)if A=="{"then return a.parseObject(h)elseif A=="["then return a.parseArray(h)elseif tonumber(A)~=nil or w[A]then return a.parseNumber(h)elseif h:sub(1,4)=="true"or h:sub(1,5)=="false"then return a.parseBoolean(h)elseif A=="\""then return a.parseString(h)elseif h:sub(1,4)=="null"then return a.parseNull(h)end;return nil end;function a.decode(h)h=a.removeWhite(h)t=a.parseValue(h)return t end;function a.decodeFromFile(B)local C=assert(fs.open(B,"r"))local D=a.decode(C.readAll())C.close()return D end;local function E(F)local G,H=http.get(F)if G then local I=G.readAll()G.close()return I else printError("Faild to get: "..F)printError(H)error()end end;local function J(_question)if _question==nil then else if term.isColor()then term.setTextColour(colors.orange)end;term.write(_question.."? [")if term.isColor()then term.setTextColour(colors.lime)end;term.write('Y')if term.isColor()then term.setTextColour(colors.orange)end;term.write('/')if term.isColor()then term.setTextColour(colors.red)end;term.write('n')if term.isColor()then term.setTextColour(colors.orange)end;term.write("] ")term.setTextColour(colors.white)end;local K=string.lower(string.sub(read(),1,1))if K=='y'or K=='j'or K==''then return true else return false end end;local function L(string,M)local N={}local O=1;local P,Q=string.find(string,M,O)while P do table.insert(N,string.sub(string,O,P-1))O=Q+1;P,Q=string.find(string,M,O)end;table.insert(N,string.sub(string,O))return N end;local function R(h,S)return S==""or string.sub(h,-#S)==S end;function startsWith(h,T)return string.sub(h,1,#T)==T end;local function U(V)if V>=1000*1000 then return math.floor(V/(100*1000))/10 .."MB"elseif V>=1000 then return math.floor(V/100)/10 .."KB"else return V.."B"end end;local function W(X,B,Y)local C=fs.open(B,"w")C.write(X)C.close()if not Y then print(B)end end;local function Z(F,B,Y)W(E(F),B,Y)end;local function _(F,a0)local a1="/tmp/"..a0;Z(F,a1,true)local a2=dofile(a1)fs.delete(a1)return a2 end;local function a3(a4)if term.isColor()then term.setTextColour(a4)end end;local a5={owner="Commandcracker",repo="oculusos",branch="master"}local a6={...}local a7=true;local a8={}local a9=false;if a6[1]then a9=true end;if fs.exists("/.system_info")then a9=true;local C=fs.open("/.system_info","r")local aa=a.decode(C.readLine())if aa.minimized~=nil then a7=aa.minimized end;if aa.git.branch~=nil then a5.branch=aa.git.branch end;C.close()end;if a9 then _question="Update OculusOS"else _question="Install OculusOS"end;if J(_question)then else printError("Abort.")return end;if not a9 then a7=J("Minimize OculusOS")end;local ab=a.decode(E("https://api.github.com/repos/"..a5.owner.."/"..a5.repo.."/git/trees/"..a5.branch.."?recursive=1"))if ab.message then printError("GitHub returned the error: "..ab.message)error()end;local ac="build"if a7~=true then ac="src"end;local ad={[ac.."/boot/*"]="/boot/",[ac.."/lib/*"]="/lib/",[ac.."/bin/*"]="/bin/",[ac.."/startup.lua"]="/startup"}if not fs.exists(".shellrc")then ad[".shellrc.lua"]="/.shellrc"end;local ae="bootscreen/"if turtle then ae=ae.."turtle/"else if pocket then ae=ae.."pocket/"else ae=ae.."computer/"end end;if term.isColor()then ae=ae.."colord.nfp"else ae=ae.."default.nfp"end;ad[ae]="/.bootscreen"if shell.resolveProgram("/rom/programs/http/wget")==nil then ad[ac.."/fix/wget.lua"]="/bin/wget"end;if tonumber(L(os.version(),' ')[2])<=1.7 then ad[ac.."/fix/pastebin.lua"]="/bin/pastebin"ad[ac.."/fix/00_fix.lua"]="/lib/00_fix"end;for af,ag in pairs(ab.tree)do if ag.type=="tree"and ad[ag.path.."/*"]~=nil then for af,C in pairs(ab.tree)do if C.type=="blob"and ag.path==string.sub(C.path,1,#ag.path)then local ah=ad[ag.path.."/*"]..string.sub(C.path,#ag.path+2)if R(ah,".lua")==true then ah=string.sub(ah,1,-5)end;ad[C.path]=ah end end;ad[ag.path.."/*"]=nil end end;local ai=0;for af,C in pairs(ab.tree)do if C.type=="blob"and ad[C.path]~=nil then ai=ai+C.size;table.insert(a8,function()Z("https://raw.githubusercontent.com/"..a5.owner..'/'..a5.repo..'/'..a5.branch..'/'..C.path,ad[C.path])end)end end;if not a9 and ai>fs.getFreeSpace("/")then printError("Your drive("..U(fs.getFreeSpace("/"))..") can't fit OculusOS("..U(ai)..")")error()end;table.insert(a8,function()W(a.encode({git={owner=a5.owner,repo=a5.repo,branch=a5.branch,commit=ab.sha},colord=term.isColor(),minimized=a7}),"/.system_info")end)if not a9 then local aj,ak;if a7 then aj="https://raw.githubusercontent.com/Commandcracker/CC-pack/master/build/lib/pack.lua"ak="pack"else aj="https://raw.githubusercontent.com/Commandcracker/CC-pack/master/src/lib/pack.lua"ak="pack-src"end;term.setTextColour(colors.white)print("Installing Pack")local function al()local am=_(aj,"pack")if not fs.exists("/etc/pack/sources.list")then local an=fs.open("/etc/pack/sources.list","w")an.writeLine("pack https://raw.githubusercontent.com/Commandcracker/CC-pack/master/pack.json")an.writeLine("commandcracker https://raw.githubusercontent.com/Commandcracker/CC-packages/master/pack.json")an.close()am.fetchSources(true)end;for ao,ap in pairs(am.getPackages())do for a0,aq in pairs(ap)do if a0==ak then if am.isPackageInstalled(ao.."/"..a0)then printError("Pack is already installed")return true end;am.installPackage(ao.."/"..a0,aq,shell)return true end end end;return false end;if not al()then printError("Faild to install pack")end end;if not a9 then term.setTextColour(colors.white)print("Installing OculusOS")end;a3(colors.lime)print("Downloading")a3(colors.blue)parallel.waitForAll(table.unpack(a8))if not a9 and settings and not pocket then settings.set("shell.allow_disk_startup",false)settings.save()end;term.setTextColour(colors.white)if J("Reboot now")then a3(colors.orange)print("Rebooting computer")sleep(1)os.reboot()end