local a={["\n"]="\\n",["\r"]="\\r",["\t"]="\\t",["\b"]="\\b",["\f"]="\\f",["\""]="\\\"",["\\"]="\\\\"}local function b(t)local c=0;for d,e in pairs(t)do if type(d)~="number"then return false elseif d>c then c=d end end;return c==#t end;local g={['\n']=true,['\r']=true,['\t']=true,[' ']=true,[',']=true,[':']=true}function removeWhite(h)while g[h:sub(1,1)]do h=h:sub(2)end;return h end;local function i(j,k,l,m)local h=""local function n(o)h=h..("\t"):rep(l)..o end;local function p(j,q,r,s,u)h=h..q;if k then h=h.."\n"l=l+1 end;for d,e in s(j)do n("")u(d,e)h=h..","if k then h=h.."\n"end end;if k then l=l-1 end;if h:sub(-2)==",\n"then h=h:sub(1,-3).."\n"elseif h:sub(-1)==","then h=h:sub(1,-2)end;n(r)end;if type(j)=="table"then assert(not m[j],"Cannot encode a table holding itself recursively")m[j]=true;if b(j)then p(j,"[","]",ipairs,function(d,e)h=h..i(e,k,l,m)end)else p(j,"{","}",pairs,function(d,e)assert(type(d)=="string","JSON object keys must be strings",2)h=h..i(d,k,l,m)h=h..(k and": "or":")..i(e,k,l,m)end)end elseif type(j)=="string"then h='"'..j:gsub("[%c\"\\]",a)..'"'elseif type(j)=="number"or type(j)=="boolean"then h=tostring(j)else error("JSON only supports arrays, objects, numbers, booleans, and strings",2)end;return h end;function encode(j)return i(j,false,0,{})end;function encodePretty(j)return i(j,true,0,{})end;local v={}for d,e in pairs(a)do v[e]=d end;function parseBoolean(h)if h:sub(1,4)=="true"then return true,removeWhite(h:sub(5))else return false,removeWhite(h:sub(6))end end;function parseNull(h)return nil,removeWhite(h:sub(5))end;local w={['e']=true,['E']=true,['+']=true,['-']=true,['.']=true}function parseNumber(h)local x=1;while w[h:sub(x,x)]or tonumber(h:sub(x,x))do x=x+1 end;local j=tonumber(h:sub(1,x-1))h=removeWhite(h:sub(x))return j,h end;function parseString(h)h=h:sub(2)local o=""while h:sub(1,1)~="\""do local y=h:sub(1,1)h=h:sub(2)assert(y~="\n","Unclosed string")if y=="\\"then local z=h:sub(1,1)h=h:sub(2)y=assert(v[y..z],"Invalid escape character")end;o=o..y end;return o,removeWhite(h:sub(2))end;function parseArray(h)h=removeWhite(h:sub(2))local j={}local x=1;while h:sub(1,1)~="]"do local e=nil;e,h=parseValue(h)j[x]=e;x=x+1;h=removeWhite(h)end;h=removeWhite(h:sub(2))return j,h end;function parseObject(h)h=removeWhite(h:sub(2))local j={}while h:sub(1,1)~="}"do local d,e=nil,nil;d,e,h=parseMember(h)j[d]=e;h=removeWhite(h)end;h=removeWhite(h:sub(2))return j,h end;function parseMember(h)local d=nil;d,h=parseValue(h)local j=nil;j,h=parseValue(h)return d,j,h end;function parseValue(h)local A=h:sub(1,1)if A=="{"then return parseObject(h)elseif A=="["then return parseArray(h)elseif tonumber(A)~=nil or w[A]then return parseNumber(h)elseif h:sub(1,4)=="true"or h:sub(1,5)=="false"then return parseBoolean(h)elseif A=="\""then return parseString(h)elseif h:sub(1,4)=="null"then return parseNull(h)end;return nil end;function decode(h)h=removeWhite(h)t=parseValue(h)return t end;function decodeFromFile(B)local C=assert(fs.open(B,"r"))local D=decode(C.readAll())C.close()return D end;local function E(F,B)local C=fs.open(B,"w")C.write(F)C.close()print(B)end;local function G(H)local I=http.get(H)if not I then return nil end;local J=I.readAll()I.close()return J end;local function K(H,B)E(G(H),B)end;local function L(L)if L==nil then else if term.isColor()then term.setTextColour(colors.orange)end;term.write(L.."? [")if term.isColor()then term.setTextColour(colors.lime)end;term.write('Y')if term.isColor()then term.setTextColour(colors.orange)end;term.write('/')if term.isColor()then term.setTextColour(colors.red)end;term.write('n')if term.isColor()then term.setTextColour(colors.orange)end;term.write("] ")term.setTextColour(colors.white)end;local M=string.lower(string.sub(read(),1,1))if M=='y'or M=='j'or M==''then return true else return false end end;local function N(string,O)local P={}local Q=1;local R,S=string.find(string,O,Q)while R do table.insert(P,string.sub(string,Q,R-1))Q=S+1;R,S=string.find(string,O,Q)end;table.insert(P,string.sub(string,Q))return P end;local T={owner="Commandcracker",repo="oculusos",branch="master"}local H="https://raw.githubusercontent.com/"..T.owner..'/'..T.repo..'/'..T.branch..'/'local U=H.."build/"local V=H.."src/"local W={...}local X=true;term.clear()term.setCursorPos(1,1)if W[1]then _question="Update OculusOS"f=fs.open("/.system_info","r")if f then system_info=decode(f.readLine())if system_info.minimized~=nil then X=system_info.minimized end;if system_info.git.branch~=nil then T.branch=system_info.git.branch end end else _question="Install OculusOS"end;if L(_question)then else printError("Abort.")return end;if not W[1]then X=L("Minimize OculusOS")end;if X~=true then U=H.."src/"end;print()if term.isColor()then term.setTextColour(colors.lime)end;print("Downloading")if term.isColor()then term.setTextColour(colors.blue)end;print()local Y={}if not fs.exists(".shellrc")then table.insert(Y,function()K(H..".shellrc.lua","/.shellrc")end)end;local Z="bootscreen/"if turtle then Z=Z.."turtle/"else if pocket then Z=Z.."pocket/"else Z=Z.."computer/"end end;if term.isColor()then Z=Z.."colord.nfp"else Z=Z.."default.nfp"end;table.insert(Y,function()K(H..Z,"/.bootscreen")end)table.insert(Y,function()K(U.."startup.lua","/startup")end)if shell.resolveProgram("/rom/programs/http/wget")==nil then table.insert(Y,function()K(U.."fix/wget.lua","/bin/wget")end)end;if tonumber(N(os.version(),' ')[2])<=1.7 then table.insert(Y,function()K(U.."fix/pastebin.lua","/bin/pastebin")end)end;parallel.waitForAll(function()for _ in G(V.."boot/index"):gmatch("([^\n]*)\n?")do if _~=""then table.insert(Y,function()K(U.."boot/".._..".lua","/boot/".._)end)end end end,function()for _ in G(V.."lib/index"):gmatch("([^\n]*)\n?")do if _~=""then table.insert(Y,function()K(U.."lib/".._..".lua","/lib/".._)end)end end end,function()for _ in G(V.."bin/index"):gmatch("([^\n]*)\n?")do if _~=""then table.insert(Y,function()K(U.."bin/".._..".lua","/bin/".._)end)end end end,function()if not pocket then for _ in G(V.."bin/not_pocket/index"):gmatch("([^\n]*)\n?")do if _~=""then table.insert(Y,function()K(U.."bin/not_pocket/".._..".lua","/bin/".._)end)end end end end)table.insert(Y,function()E(encode({git={owner=T.owner,repo=T.repo,branch=T.branch,commit=decode(G("https://api.github.com/repos/"..T.owner..'/'..T.repo.."/git/refs/heads/"..T.branch)).object.sha},colord=term.isColor(),minimized=X}),"/.system_info")end)parallel.waitForAll(table.unpack(Y))print()if not W[1]and settings and not pocket then settings.set("shell.allow_disk_startup",false)settings.save()end;term.setTextColour(colors.white)if L("Reboot now")then print()if term.isColor()then term.setTextColor(colors.orange)end;print("Rebooting computer")sleep(3)os.reboot()end